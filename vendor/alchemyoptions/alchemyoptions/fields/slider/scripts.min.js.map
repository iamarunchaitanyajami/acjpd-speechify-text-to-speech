{"version":3,"sources":["fields/slider/scripts.js"],"names":["window","document","$","AO","$sliders","$slider","slider","data","min","find","max","step","range","$input","ui","value","slide","event","val","initialise_slider","i","el","$repeatee","e","get_slider_value","id","Promise","resolve","type","concat","jQuery"],"mappings":"AAAA,cAEA,SAACA,EAAAC,EAAAC,GACGF,EAAAG,GAAYH,EAAAG,IAAZ,GAEA,IAAMC,EAAWF,EAAE,oBAoBf,SAAMG,EAANC,GACMC,IAAIF,EAAWE,EAAAA,GAAfA,EAAOF,EAAQE,KAAK,UAGtB,GAAAA,EAAA,CAIEC,IAAMD,EAAAF,EAAgBG,QAA5B,mBAAAC,KAAA,yBACYF,EAAKG,EAAMH,IAAKG,EAAMF,IAAlC,EACUE,EAAQC,EAALD,IAAgBH,EAAhBG,IAAb,IAEQJ,EAAOC,EAAAI,KAAAJ,EAAAI,KAAA,EAEXD,EAFWJ,OAAA,CAGNE,IAAEA,EACDG,IAJKD,EAKNE,MAAQ,MACRD,KAAEA,EACHE,MAAWC,EAAGC,MACjBC,MAAA,SAAAC,EAAAH,GARLD,EAAAK,IAAAJ,EAAAC,WA7BAX,EAAA,IACIe,EAAAA,KAAAA,SAAiBC,EAAAC,GADrBF,EAAAE,KAMAnB,EAAAD,GAAMqB,GAAS,sBAAf,SAAAC,EAAAhB,GACMH,IAAAA,EAAWkB,EAAUb,SAAAA,KAAK,oBAG5BL,EAAc,IACVe,EAAAA,KAAkBE,SAAAA,EAAlBA,GADJF,EAAAE,OAiCAlB,GAAAqB,iBADoB,SAAAC,GAEpB,OAFoBC,QAAAC,QAAA,CAGpBC,KAAU,SAHdH,GAAAA,EADJV,MAAAb,EAAA,IAAA2B,OAAAJ,IAAAP,SA/CJ,CAsDGlB,OAAQC,SAAU6B","file":"fields\\slider\\scripts.min.js","sourcesContent":["\"use strict\";\r\n\r\n(function(window, document, $) {\r\n    window.AO = window.AO || {};\r\n\r\n    const $sliders = $('.jsAlchemySlider');\r\n\r\n    if( $sliders[0] ) {\r\n        $sliders.each((i, el) => {\r\n            initialise_slider(el);\r\n        });\r\n    }\r\n\r\n    $(document).on('alch_repeatee_added', function(e, data) {\r\n        const $repeatee = data.repeatee;\r\n        const $sliders = $repeatee.find('.jsAlchemySlider');\r\n\r\n        if( $sliders[0] ) {\r\n            $sliders.each((i, el) => {\r\n                initialise_slider(el);\r\n            });\r\n        }\r\n    });\r\n\r\n    function initialise_slider(slider) {\r\n        const $slider = $(slider);\r\n        const data = $slider.data('values');\r\n\r\n        if( ! data ) {\r\n            return;\r\n        }\r\n\r\n        const $input = $slider.closest('.jsAlchemyField').find('.jsAlchemySliderInput');\r\n        const min = data.min ? data.min : 0;\r\n        const max = data.max ? data.max : 100;\r\n        const step = data.step ? data.step : 1;\r\n\r\n        $slider.slider({\r\n            min: min,\r\n            max: max,\r\n            range: \"min\",\r\n            step: step,\r\n            value: $input.val(),\r\n            slide: function( event, ui ) {\r\n                $input.val(ui.value);\r\n            }\r\n        });\r\n    }\r\n\r\n    AO.get_slider_value = id => {\r\n        return Promise.resolve( {\r\n            'type': 'slider',\r\n            'id': id,\r\n            'value': $(`#${id}`).val()\r\n        } );\r\n    };\r\n})(window, document, jQuery);"]}