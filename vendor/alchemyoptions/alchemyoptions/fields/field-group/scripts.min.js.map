{"version":3,"sources":["fields/field-group/scripts.js"],"names":["window","$","AO","get_field_group_value","children","alchemy","field","data","fields","Function","map","type","i","Promise","resolve","id","get","correct_fg_ids","$field","jQuery","values","valuesData","neededTypeFields","value"],"mappings":"AAAA,cAEA,SAACA,EAAAC,GACGD,EAAAE,GAAYF,EAAAE,IAAZ,GAcIA,GAAAC,sBAAsBC,SAAAA,GAClB,IAAMC,EAAYC,EAAAA,IAAAA,OAAOC,IAElBC,EAAIC,EAAJL,SAAA,mBAAuCM,IAACC,SAAxCC,EAAAN,GAHX,IAAAD,EAAAJ,EAAAK,GAAAC,KAAA,WAOI,OAAOM,IAAQC,SAARD,kBAAAA,OAAiBR,EAAAM,KAAjBE,cAAAA,OAAiBR,EAAAU,GAAjBF,OAAAA,CAAiBR,EAAAU,MACpBC,MAEA,OAAAH,QAASI,IAAAA,GAAgBC,KAAOX,SAAAA,GAHpC,OAAAM,QAAAC,QAAA,CADJH,KAAA,cARJI,GAAAA,EAgBOI,OA1BkBd,EAH7Ba,EAAAX,KAAA,WAGsCa,EAHtCC,EAIYC,EAAmBjB,EAAQ,eAG3BkB,EAAAA,KAAMH,EAAQE,SAAAA,EAAAA,GADlBC,EAAA,GAAAD,EAAAV,GAAA,KAIOQ,KAPX,IAAyBf,EAASe,EAC1BE,KAJZ,CA6BGtB,OAAQmB","file":"fields\\field-group\\scripts.min.js","sourcesContent":["\"use strict\";\n\n(function(window, $) {\n    window.AO = window.AO || {};\n\n    function correct_fg_ids( alchemy, values ) {\n        let neededTypeFields = alchemy['fields-data'];\n\n        $.each(values, (i, value) => {\n            value['id'] = neededTypeFields[i]['id'];\n        });\n\n        return values;\n    }\n\n    AO.get_field_group_value = id => {\n        const $field = $(`#${id}`);\n        const fields = $field.children('.jsAlchemyField').map((i, field) => {\n            const alchemy = $(field).data('alchemy');\n\n            return new Function( `return AO['get_${alchemy.type}_value']('${alchemy.id}');` )(alchemy.id)\n        }).get()\n\n        return Promise.all(fields).then(valuesData => {\n            return Promise.resolve( {\n                'type': 'field_group',\n                'id': id,\n                'value': correct_fg_ids( $field.data('alchemy'), valuesData )\n            } );\n        });\n    };\n})(window, jQuery);"]}