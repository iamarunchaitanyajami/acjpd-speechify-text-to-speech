{"version":3,"sources":["fields/editor/scripts.js"],"names":["window","document","$","AO","tinymce","$editors","each","create_editors","el","settings","extend","init_instance_callback","$container","editor","editorContainer","tweak_editor_settings","$editor","attr","addClass","before","concat","id","min_height","hasClass","tmcEditor","get","on","e","preventDefault","destroy_editors","save_editors","i","$el","selfHeight","editorHeight","prev","next","destroy","restore_editors","closest","outerHeight","init","height","width","editorWidth","removeAttr","tweakedSettings","initialSettings","newVal","val","$field","replace","removeClass","filter","$document","key","children","$repeatee","remove","length","repeatee","data","find","$area","value","Promise","resolve","get_editor_value","getContent","type","jQuery"],"mappings":"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","file":"fields\\editor\\scripts.min.js","sourcesContent":["\"use strict\";\r\n\r\n(function(window, document, $){\r\n    window.AO = window.AO || {};\r\n\r\n    const $document = $(document);\r\n\r\n    AO.tinymce = {\r\n        create_editors: $editors => {\r\n            $editors.each((i, el) => {\r\n                const $editor = $(el);\r\n                const settings = $.extend({}, AO.tinymce.tweak_editor_settings( $editor.attr('id') ), {\r\n                    init_instance_callback: editor => {\r\n                        const $container = $(editor.editorContainer);\r\n\r\n                        if( $container[0] ) {\r\n                            $container.addClass('wp-editor-container').before(\r\n                                `<div id=\"wp-${editor.id}-editor-tools\" class=\"wp-editor-tools hide-if-no-js\">\r\n                                    <div id=\"wp-${editor.id}-media-buttons\" class=\"wp-media-buttons\">\r\n                                    <button type=\"button\" class=\"button insert-media add_media\" data-editor=\"${editor.id}\">\r\n                                    <span class=\"wp-media-buttons-icon\"></span> Add Media\r\n                                    </button>\r\n                                    </div>\r\n                                </div>`);\r\n\r\n                        }\r\n                    },\r\n                    min_height: 250\r\n                });\r\n\r\n                if( typeof tinymce !== 'undefined' && ! $editor.hasClass('tinymce--init') ) {\r\n                    tinymce.init(settings);\r\n\r\n                    $editor.addClass('tinymce--init').on('mousedown', function (e) {\r\n                        e.preventDefault();\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        destroy_editors: $editors => {\r\n            $editors.each((i, el) => {\r\n                const $el = $(el);\r\n                const tmcEditor = tinymce.get($el.attr('id'));\r\n\r\n                $el.removeClass('tinymce--init');\r\n\r\n                if( tmcEditor ) {\r\n                    $el.val(tmcEditor.getContent());\r\n\r\n                    tmcEditor.destroy();\r\n                }\r\n            });\r\n        },\r\n        save_editors($editors) {\r\n            $editors.each((i, el) => {\r\n                const $editor = $(el);\r\n\r\n                if( $editor.hasClass('tinymce--init') && typeof( tinymce ) !== 'undefined' ) {\r\n                    const $field = $editor.closest('.field--editor');\r\n                    const selfHeight = $editor.closest('.field--editor').outerHeight();\r\n                    const editorHeight = $editor.prev('.mce-tinymce').outerHeight();\r\n                    const editorWidth = $editor.prev('.mce-tinymce').width();\r\n\r\n                    $editor.next('.field__cover').height(editorHeight).width(editorWidth);\r\n                    $field.height(selfHeight).addClass('tinymce--destroyed');\r\n\r\n                    tinymce.get($editor.attr('id')).destroy();\r\n                }\r\n            });\r\n        },\r\n        restore_editors($editors) {\r\n            $editors.each((i, el) => {\r\n                const $editor = $(el);\r\n                const $field = $editor.closest('.field--editor');\r\n\r\n                if( $field.hasClass('tinymce--destroyed') && $editor.hasClass('tinymce--init') && typeof( tinymce ) !== 'undefined' ) {\r\n\r\n                    const settings = AO.tinymce.tweak_editor_settings($editor.attr('id'));\r\n\r\n                    settings.min_height = 250;\r\n                    tinymce.init(settings);\r\n\r\n                    $editor.next('.field__cover').removeAttr('style');\r\n                    $field.removeAttr('style').removeClass('tinymce--destroyed');\r\n                }\r\n            });\r\n        },\r\n        tweak_editor_settings: id => {\r\n            const tweakedSettings = {};\r\n\r\n            $.each(AO.tinymce.initialSettings, (key, val) => {\r\n                let newVal = val;\r\n\r\n                if( 'string' === typeof val ) {\r\n                    newVal = val.replace('alchemy-temp-editor', id);\r\n                }\r\n\r\n                tweakedSettings[key] = newVal;\r\n            });\r\n\r\n            return tweakedSettings;\r\n        }\r\n    };\r\n\r\n    $(() => {\r\n        let $editors = $('.jsAlchemyEditor');\r\n\r\n        if( $editors[0] ) {\r\n            $editors = $editors.filter((i, el) => {\r\n                return $(el).closest('.repeatee').length === 0\r\n            });\r\n\r\n            $document.on('tinymce-editor-init', () => {\r\n                AO.tinymce.create_editors($editors);\r\n            });\r\n        }\r\n    });\r\n\r\n    $document.on('alch_repeatee_added', (e, data) => {\r\n        const $repeatee = data.repeatee;\r\n        const $editors = $repeatee.children('.repeatee__fields').find('.field--editor').find('.jsAlchemyEditor');\r\n\r\n        if( $editors[0] ) {\r\n            AO.tinymce.create_editors( $editors );\r\n        }\r\n    });\r\n\r\n    $document.on('alch_repeatee_closed', (e, data) => {\r\n        const $repeatee = data.repeatee;\r\n        const $editors = $repeatee.children('.repeatee__fields').find('.field--editor');\r\n\r\n        if( $editors[0] ) {\r\n            $editors.find('.wp-editor-tools').remove();\r\n\r\n            AO.tinymce.destroy_editors( $editors.find('.jsAlchemyEditor') );\r\n        }\r\n    });\r\n\r\n    $document.on('alch_repeatee_opened', (e, data) => {\r\n        const $repeatee = data.repeatee;\r\n        const $editors = $repeatee.children('.repeatee__fields').find('.field--editor');\r\n\r\n        if( $editors[0] ) {\r\n            AO.tinymce.create_editors( $editors.find('.jsAlchemyEditor') );\r\n        }\r\n    });\r\n\r\n    AO.get_editor_value = id => {\r\n        const $area = $(`#${id}`);\r\n\r\n        let value = '';\r\n\r\n        if( $area.hasClass('tinymce--init') && typeof( tinymce ) !== 'undefined' ) {\r\n            value = tinymce.get(id).getContent();\r\n        } else {\r\n            value = $area.val()\r\n        }\r\n\r\n        return Promise.resolve( {\r\n            'type': 'editor',\r\n            'id': id,\r\n            'value': value\r\n        } );\r\n    };\r\n})(window, document, jQuery);"]}